# SRS Configuration for PixelCast - WebRTC to WebRTC with Audio Support
listen              1935;
max_connections     1000;
srs_log_tank        file;
srs_log_file        ./objs/srs.log;
daemon              off;

# HTTP API for management
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
    raw_api {
        enabled             on;
        allow_reload        on;
        allow_query         on;
        allow_update        on;
    }
}

# HTTP server for serving WebRTC demos and stats
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
    crossdomain     on;
}

# WebRTC server optimized for screen sharing with audio
rtc_server {
    enabled         on;
    listen          8000;
    candidate       $CANDIDATE;
    
    # Enable both TCP and UDP for WebRTC compatibility
    tcp {
        enabled         on;
    }
    
    # Use UDP protocol for WebRTC (primary)
    protocol        udp;
    
    # Optimized for low latency
    stun_timeout    3000;
    ice_lite        on;
    dscp            46;  # EF (Expedited Forwarding) for real-time traffic
}

vhost __defaultVhost__ {
    # Enable TCP nodelay for lower network latency
    tcp_nodelay     on;
    min_latency     on;
    
    # CORS support
    http_remux {
        enabled         on;
        mount           [vhost]/[app]/[stream].flv;
        hstrs           on;
    }
    
    # WebRTC configuration with audio transcoding support
    rtc {
        enabled         on;
        
        # Audio transcoding support - CRITICAL for audio to work
        # This enables SRS to handle audio codec conversion properly
        rtmp_to_rtc     on;  # Enable RTMP to WebRTC conversion
        rtc_to_rtmp     on;  # Enable WebRTC to RTMP conversion
        
        # Audio codec settings
        acodec          opus;    # Use Opus for WebRTC audio (best for real-time)
        
        # Error recovery and connection stability
        nack            on;      # Negative Acknowledgment for packet recovery
        twcc            on;      # Transport Wide Congestion Control
        pli             on;      # Picture Loss Indication
        fir             on;      # Full Intra Request
        
        # DTLS settings
        dtls_role       passive;
        dtls_version    auto;
        dtls_timeout    30000;   # 30 seconds for DTLS handshake
        
        # Jitter buffer for audio/video sync
        jitter_buffer_min   0;    # Minimum buffer for low latency
        jitter_buffer_max   50;   # Maximum 50ms buffer
        
        # Session management
        stun_timeout    5000;     # 5 seconds for STUN
        session_timeout 60000;   # 1 minute session timeout
        
        # Packet handling
        packet_order    on;       # Ensure proper packet sequencing
        drop_for_pt     off;      # Don't drop packets for high frame rates
        
        # Enable RTX for packet recovery
        rtx             on;
    }
    
    # Play settings optimized for audio/video streaming
    play {
        gop_cache       on;       # Enable GOP cache
        gop_cache_max_frames 10;  # Cache frames for recovery
        
        queue_length    5;        # Keep queue small for low latency
        mw_latency      10;       # 10ms write latency
        realtime        on;       # Enable realtime playback
        buffer_time     50;       # 50ms buffer for sync
        
        # Audio-specific settings
        atc             on;       # Audio Time Correction for sync
        mix_correct     on;       # Enable audio mixing correction
        
        send_min_interval  5;     # 5ms intervals for smooth delivery
    }
    
    # Publish settings for screen sharing with audio
    publish {
        mr              off;      # Disable merged read for immediate processing
        mr_latency      10;       # 10ms read latency if MR enabled
        realtime        on;       # Enable realtime publishing
        
        # Connection timeouts
        publish_1stpkt_timeout  3000;  # 3 seconds for first packet
        kickoff_for_idle   15000;      # 15 seconds idle timeout
        
        # Audio handling during publish
        atc             on;       # Audio Time Correction
        mix_correct     on;       # Audio mixing correction
        
        send_min_interval  5;     # 5ms intervals
    }
    
    # Enable transcoding for audio codec conversion
    transcode {
        enabled         on;       # ENABLE transcoding for audio conversion
        
        # Engine for audio transcoding
        engine audio_transcode {
            enabled     on;
            
            # Video settings (pass-through for screen sharing)
            vcodec      copy;     # Don't transcode video, just pass through
            
            # Audio settings - CRITICAL for audio to work
            acodec      libopus;  # Convert to Opus for WebRTC
            abitrate    128;      # 128kbps for good quality
            asample_rate 48000;   # 48kHz sample rate (WebRTC standard)
            achannels   2;        # Stereo audio
            
            # Audio filters for better quality
            afilter {
                # Audio normalization and noise reduction
                an          off;    # Don't normalize audio levels
                ar          48000;  # Resample to 48kHz
                ac          2;      # Ensure stereo output
            }
        }
    }
    
    # Disable unused features for performance
    hls {
        enabled         off;
    }
    
    forward {
        enabled         off;
    }
    
    dvr {
        enabled         off;
    }
} 